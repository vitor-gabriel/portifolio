#INCLUDE 'TLPP-CORE.TH'
#INCLUDE 'TLPP-REST.TH'

/*/{Protheus.doc} RestCliente
mock para rest tlpp
@type class
@version 12.1.27
@author Vitor
@since 12/10/2021
/*/
Class RestCliente

	Private Data jBody          AS Object
	Private Data jDados         AS Object
	Private Data jResponse		AS Object

	@Get('RestCliente/all')
	Public Method GetallCliente()

	
	@Post('RestCliente/addcli')
	Public Method AddCliente()
    

	Public  Method New() Constructor
	Private Method SetResponse(nCode)

EndClass



Method New() Class RestCliente

    local jcli := NIL
    Local nX

	Self:jBody     := JsonObject():New()
	Self:jDados    := JsonObject():New()
	Self:jResponse := JsonObject():New()

    Self:jDados['cliente'] := {}
    
    If !File('AMOCKE.json')

        for nX := 1 to 50
            jcli := JsonObject():New()
            jcli['id']      := nX
            jcli['cliente'] := 'cliente ' + CValToChar(nX)
            jcli['nome']    := 'cliente ' + CValToChar(nX)
            AADD(Self:jDados['cliente'], jcli)
        next

        MemoWrite('AMOCKE.json',Self:jDados:ToJson())

    EndIf

Return


Method GetallCliente() Class RestCliente
    
    Local jResult	:= JsonObject():New()
    Local cJson := MemoRead("AMOCKE.json")

    jResult:FromJson(cJson) 

    varInfo('jResult',jResult)

    Self:jResponse['data'] := jResult
	Self:jResponse['msg']  := 'OK'

	Self:SetResponse()
Return


Method AddCliente() Class RestCliente

    Local jResult	:= JsonObject():New()
    Local jCliente  := JsonObject():New()
    Local cJson     := MemoRead("AMOCKE.json")

    Local cBody 	:= oRest:GetBodyRequest()

    
    If jResult:FromJson(cBody) == nil

        jCliente:FromJson(cJson)


        Aadd( jCliente['cliente'] , jResult )

		Self:jResponse['data'] := jCliente

        MemoWrite('AMOCKE.json', jCliente:ToJson() )
	
    Else
		Self:jResponse['data'] := "{'msg':'json invalido'}"
	EndIf

	Self:SetResponse()
Return


Method SetResponse(nCode)  Class RestCliente

	Default nCode := 200	

	varInfo('Self:jResponse', Self:jResponse )

	oRest:setStatusCode(nCode)
	oRest:SetResponse(Self:jResponse)
	oRest:setKeyHeaderResponse('Content-Type','application/json')

Return

