#INCLUDE "TOTVS.CH"
#INCLUDE "TLPP-CORE.TH"
#INCLUDE "TLPP-REST.TH"
#INCLUDE "FWMVCDEF.CH"

/*/{Protheus.doc} u_PostFornecedores
Fazendo um insert de clientes
@type function
@version 12.1.33
@author felip
@since 13/01/2023
/*/@POST("/fornecedores/tipo/incluir")
Function u_PostFornecedores()

	Local aBody     := {}  as Array
	Local cCampos   := ""  as Character
	Local jBody     := Nil as Json
	local jResponse := Nil as Json
	Local lRet      := .T. as Logical
	Local nValor    := 0   as Numeric
	Local nX        := 0   as Numeric
	Local oModel    := Nil as Object
	Local oSA2Model := Nil as Object

	// Cria um object Json
	jBody := JsonObject():new()

	// Cria um Json de resposta no final do proceso realizado
	jResponse := JsonObject():New()

	// Permite popular o JsonObject
	jBody:fromJson( oRest:GetBodyRequest() )

	// Pega o nome dos campos que foram passados na JSON
	aBody := jBody:GetNames()

	// Aqui vemos se todos os campos obrigatorios da tabela de fornecedores estão preenchidos
	nX := 1
	cCampos := "A2_COD|A2_LOJA|A2_NOME|A2_NREDUZ|A2_END|A2_TIPO|A2_EST|A2_MUN"
	while nX <= Len(aBody)
		if(aBody[nX] $ cCampos)
			nValor += 1
		endif
		nX++
	end
	nX := 1
	// Caso estejam apresenta prosegui com o Insert na tabela
	if(nValor >= 8)
		// Ve se os dois campos iniciais estão correto
		if(aBody[1] == "A2_COD" .And.aBody[2] == "A2_LOJA")
			// Faz uma consulta no protheus vendo se este registro existe
			DbSelectArea("SA2")
			if((!DBSeek(xFilial("SA2") + jBody[aBody[1]] + jBody[aBody[2]])))
				oModel := FWLoadModel("MATA020M")
				oModel:SetOperation(MODEL_OPERATION_INSERT)
				oModel:Activate()

				oSA2Model := oModel:GetModel("SA2MASTER")

				while nX <= Len(aBody)
					oSA2Model:setValue(aBody[nX],jBody[aBody[nX]]) // Campos determinados pelo usuario
					nX++
				end

				// Verifica se os dados passados estão validos
				if(oModel:VldData())
					oModel:CommitData()
					oRest:setStatusCode(200)
					jResponse['status'] := "Sucesso"
					jResponse['message'] := "usuario cadastrado com sucesso"
				else
					oRest:setStatusCode(400)
					jResponse['status'] := "erro"
					jResponse['message'] := "Verifique se todos os campos foram preenchidos da maneira correta"
				endif
			else
				oRest:setStatusCode(400)
				jResponse['status'] := "error"
				jResponse['message'] := "Este registro ja existe"
			endif
		else
			oRest:setStatusCode(400)
			jResponse['status'] := "error"
			jResponse['message'] := "Os dois campos iniciais devem ser A2_COD e A2_LOJA"
		endif
	else
		oRest:setStatusCode(400)
		jResponse['status'] := "error"
		jResponse['message'] := "Os campos obrigatorios não estao todos referenciados no Jsonp"
		jResponse['campos'] := "Campos necessarios: A2_COD, A2_LOJA, A2_NOME, A2_NREDUZ, A2_END, A2_TIPO, A2_EST, A2_MUN"
	endif
	// Define o valor de uma chave do cabeçalho de resposta
	oRest:setKeyHeaderResponse('Content-Type','application/json')
	oRest:setKeyHeaderResponse("Connection: Keep-Alive")
	oRest:setKeyHeaderResponse( "Accept-Encoding: gzip, deflate")

	// Retorna um objeto Json
	oRest:setResponse(jResponse)

Return lRet
